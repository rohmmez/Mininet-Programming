++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
							Scenario 4
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
[List of files that are to be used to execute scenario 4]

topology4.py

controller4.py

++++++++++++++++++++++
Location to copy files
++++++++++++++++++++++

<topology4.py> - <~/mininet/custom>
<controller4.py> - <~/pox/pox/misc>

[Destination to be provided for each file that is relevant to scenario 4]

++++++++++++++++
Commands to Run:

./pox.py log.level --DEBUG misc.controller4 misc.full_payload

sudo mn --custom topology4.py --topo topology4 --mac --controller remote

++++++++++++++++
[Any special instructions we need to follow before running commands you will mention below for scenario 4]
[List of commands to run before we execute the test cases of scenario 4]

Suppose we are in home (We can use command: "cd" to go into home)

First, we need to entry pox file using command: "cd pox" and then use command: "./pox.py log.level --DEBUG misc.controller4 misc.full_payload" to run the controller4.py.

Second, we need to open another terminal and entry custom file using command: "cd mininet/custom" and then use command: "sudo mn --custom topology4.py --topo topology4 --mac --controller remote" to run the topology4.py.

Finally, we can use ping or iperf to check the function of the controller3
